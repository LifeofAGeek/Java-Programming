/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    static ListNode newHead;
    
    public ListNode reverseList(ListNode head) {
        
        // Iteratively
        // ListNode prev = null;
        // ListNode curr = head;
        // while (curr != null) {
        //     ListNode nextTemp = curr.next;
        //     curr.next = prev;
        //     prev = curr;
        //     curr = nextTemp;
        // }
        // return prev;
        
        // recursively
        newHead = null;
        reverseList(null, head);
        return newHead;
    }
    
    //recursively
    public void reverseList(ListNode prev, ListNode curr){
        if(curr == null){
            newHead = prev;
            return;
        }
        reverseList(curr, curr.next);
        curr.next = prev;
    }
}